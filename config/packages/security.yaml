security:
  # https://symfony.com/doc/current/security.html#c-hashing-passwords
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
  hide_user_not_found: false
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      entity:
        class: App\Entity\User
        property: username

  role_hierarchy:
    ROLE_COMITE: [ ROLE_USER,ROLE_ADMIN ]
    ROLE_ORGACIA: [ ROLE_JURYCIA, ROLE_USER, ROLE_PROF ]
    ROLE_JURYCIA: [ ROLE_PROF, ROLE_USER ]
    ROLE_JURY: [ ROLE_PROF, ROLE_USER ]
    ROLE_ADMIN: [ ROLE_PROF, ROLE_JURYCIA, ROLE_JURY, ROLE_COMITE, ROLE_ORGACIA ]
    ROLE_SUPER_ADMIN: [ ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH ]

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      pattern: ^/
      lazy: true
      provider: app_user_provider
      custom_authenticator: App\Security\LoginFormAuthenticator
      #user_checker: App\Security\UserChecker
      remember_me:
        secret: '%kernel.secret%'
        lifetime: 2592000 # 30 days in seconds
        signature_properties: [ password ]
      switch_user: true
      logout: true
      #   path: /logout
      entry_point: App\Security\LoginFormAuthenticator


  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/login, roles: PUBLIC_ACCESS }
    - { path: ^/admin, roles: ROLE_ADMIN }
    - { path: ^/core/index, roles: ROLE_SUPER_ADMIN, }
    - { path: ^/public, roles: ROLE_ADMIN }
    - { path: ^/authorize, roles: IS_AUTHENTICATED_REMEMBERED }
    - { path: ^/elfinder , roles: ROLE_ADMIN }